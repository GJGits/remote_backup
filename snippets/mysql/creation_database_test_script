Creazione database


# AGGIUNGI UNA COLONNA LAST_DEVICEID
Creazione tabella users (db_2, db_3, db_4)
 CREATE TABLE users (
	username VARCHAR(50) PRIMARY KEY,
	hashed_password VARCHAR(128) NOT NULL,
	salt INT UNSIGNED NOT NULL,
	device_1_MAC VARCHAR(50) DEFAULT '',
	device_2_MAC VARCHAR(50) DEFAULT '',
	device_3_MAC VARCHAR(50) DEFAULT '',
	device_4_MAC VARCHAR(50) DEFAULT '',
	device_5_MAC VARCHAR(50) DEFAULT '',
	device_6_MAC VARCHAR(50) DEFAULT '',
	device_7_MAC VARCHAR(50) DEFAULT '',
	device_8_MAC VARCHAR(50) DEFAULT ''
	);

# AGGIUNGI N COLONNE DOVE N E' IL NUMERO DI DEVICE MASSIMO PER UTENTE
# LO STATUS DI QUESTE COLONNE E' {OK, GET, DELETE, TODO-DELETE}
Creazione Tabella Chunks (db_2, db_3, db_4)

create table chunks(c_username varchar(100) NOT NULL, c_id integer NOT NULL, c_hash varchar(128) NOT NULL, c_path varchar(512) NOT NULL, c_size integer NOT NULL,c_lastmod integer NOT NULL,num_chunks integer, primary key (c_username, c_path, c_id));




Creazione tabella UsersDB (db_1)

CREATE TABLE UsersDB (
	username VARCHAR(50) NOT NULL,
	db INT UNSIGNED NOT NULL,
	primary key (username, db));

Creazione tabella db_status (db_1)

per ogni db che si aggiunge, aggiungere MANUALMENTE un entry del tipo 1,0 dove il primo valore rappresenta l'id del db da assegnare
all'utente (partire da 1) , il secondo valore rappresenta il numero di utenti che utilizzano il db, inizializzare con 0!
CREATE TABLE db_status (
	db INT PRIMARY KEY,
	usc INT
);

Query per chunk con last_page (sostituire range del limit e username!). ComplessitÃ :
la seconda tabella viene unita alla prima tramite prodotto cartesiano, ma avendo questa
una riga soltanto DI FATTO e' come agganciare una colonna alla prima. Ps last_page parte 
da zero quindi se si ha una pagina sola questa sara' 0/0.

select t1.c_path, t1.num_chunks, t1.c_lastmod, t2.last_page, case 
when t1.check1 = ? then 'deleted'
else 'updated'
end as check1
from (
	select distinct c_path, num_chunks, c_lastmod, device_id ^ ? as check1
	from chunks where c_username=?
	AND (device_id ^ ?) != 0 
	AND c_lastmod > ? 
	limit ?, ?
	) as t1, 
	(
	select (ceil((count(distinct c_path) / 20))) -1 as last_page 
	from chunks 
	where c_username=?
	AND (device_id ^ ?) != 0 
	AND c_lastmod > ? 
	) as t2;